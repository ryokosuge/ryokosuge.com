---
import * as cheerio from "cheerio";
import openGraphScraper from "open-graph-scraper";
import type { OGPData } from "../types";

import HTMLParser from "./HTMLParser";

export interface Props {
  body: string;
}

const { body } = Astro.props;
const $ = cheerio.load(body);
const hrefs = $("a")
  .toArray()
  .map((element) => element.attribs.href);

const result = await Promise.all(
  hrefs.map(async (href) => {
    try {
      const result = await openGraphScraper({
        url: href,
        onlyGetOpenGraphInfo: true,
      });

      if (result.error) {
        return undefined;
      }

      const { ogImage } = result.result;
      const imageUrl = Array.isArray(ogImage)
        ? ogImage[0].url
        : typeof ogImage === "string"
        ? ogImage
        : ogImage?.url;

      return {
        url: result.result.ogUrl ?? "",
        title: result.result.ogTitle ?? "",
        description: result.result.ogDescription ?? "",
        imageUrl: imageUrl,
      };
    } catch {
      return undefined;
    }
  })
);
const ogpData = result.flatMap((r) => r ?? []) as OGPData[];
---

<HTMLParser body={body} ogpData={ogpData} />
